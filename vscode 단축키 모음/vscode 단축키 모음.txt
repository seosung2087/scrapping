github - 코딩외 실무적인 문제 해결, 포트 폴리오 올릴 장소
1. 내 소스코드를 저장(버전 관리)
2. 소스코드 공유
3. 협엽하는 공간

github - 내소스 코드를 저장하는 공간
git - 소스코드를 내 컴퓨터에서 인터넷으로 올려주는 역할은 git이 함

Step 1 : 유저이름 설정
git config --global user.name "your_name"

Step 2 : 유저 이메일 설정하기  -Github가입시 사용한 이메일을 써주세요!
git config --global user.email "your_email"

Step 3 : 정보 확인하기
git config --list



Github에 처음 코드 업로드하기

Step 1. 초기화
git init
추가할 파일 더하기

Step 2. 
git add .
.(점) 은 모든 파일이라는 뜻, 선택적으로 올리고 싶으면 add뒤에 파일 이름 붙여주면 됨 (예. git add index.html)
git add index.html
상태 확인 (선택사항)

Step 3.
 git status
히스토리 만들기

Step 4.
 git commit -m "first commit"
-m 은 메세지의 준말로 뒤에 “” 안에 주고싶은 히스토리 이름을 주면 됨 (즉, 구지 first commit일 필요가 없다는 뜻^^)

Github repository랑 내 로컬 프로젝트랑 연결

step 5.
git remote add origin https://github.com/bitnaGithub/firstproject.git
이 명령어는 github에서 복사해서 붙여와야함 (유투브 강의 참조)
잘 연결됬는지 확인 (선택사항)

step 6.
git remote -v
내가 연결한 주소값이 잘 뜨면 성공!

step 7.
Github로 올리기

git push origin master
master 자리에는 branch이름이 들어가면 됨 branch이름이 main라하면 git push origin main 이라고 써야함

Github에 계속 업데이트 하는법 

1. 추가할 파일 더하기
git add .

2. 히스토리 만들기
git commit -m "first commit"

3. Github로 올리기
git push origin master
내 컴퓨터에 소스코드를 업데이트를 하고 싶으면 이 세개의 스텝만 계속 반복하면 됨.


Github로 팀프로젝트 하는법 👨‍👩‍👧‍👦
Github에서 소스코드 다운로드

git clone 주소 폴더이름
주소는 깃허브에서 들고와야함
폴더이름은 선택사항이다 (즉 없어도됨) 폴더이름을 줄경우에는 그 폴더가 새로 생성이 되면서 그 안에 코드들이 다운로드가 되고, 폴더이름을 안줄경우엔 깃허브 프로젝트 이름으로 폴더가 자동으로 생기고 그안에 코드들이 다운로드된다.
Github에서 내 브렌치(branch)만들기

git checkout -b 브렌치이름
내 브렌치에 소스코드 업데이트하기

git add .
git commit -m "first commit"
git push origin 브렌치이름
마스터 브렌치에 소스 가져오기(pull)

git pull origin master
pull을 하기전에는 기존에 소스코드들을 commit을 먼저 해놔야 한다 (2탄 강의참조) 

브렌치끼리 이동하는 법

git checkout 브렌치이름
강의에서 소개하진 않았지만 내가 내 브렌치에서 마스터 브렌치로 이동을 하고 싶거나 다른 브렌치로 이동하고싶으면 해당 명령어를 쓰면 된다

/ : find mode

단축키
1.peek

함수 궁금할때 f12 = 함수로 워프

alt + f12 = 중간에서 파일을 열 수 있음
css 하고 html에서도 적용가능 익스텐션에서 css peak HTML css support 다운로드
새로 추가한 클래스명은 잘안괼수있음

2.refactoring
ctrl + shift + R  함수를 싸매기

3.Rename Symbol 변수명 함수명을 다르게 바꿔야 함
f2
참조가 있는 다른 파일도 바꿔줌

4. snippets - tabnine AI (자동완성)
익스텐즈 에서 설치

5. Debugger
breakpoint

6. multi cursor 
alt+ click

7.emmet
emmet명령어 + tab

8.
ctrl + L
alt + ↓
shift +alt + ↓
crtl + →
ctrl + p
ctrl + ` 터미널 
npm 이용시 npm 명령어 단축키 여기있음

1.함수 정의로 이동하기
1)원하는 함수에 커서를 올리고 Ctrl키누르면서 클릭
2)원하는 함수 클릭 후 F12 누르기

04:11 2.뒤로 탐색, 앞으로 탐색
-함수 클릭 후 Ctrl  + - 누르기
-함수 클릭 후 Ctrl + Shift + - 누르기

06:22 3.Alt키 활용
-이동원하는 위치에 커서 클릭 후 Alt + ↑ or ↓누르기

09:43 4.문자열 찾기, 한번에 바꾸기
-Ctrl + F

10:56 5.문자열 모조리 찾기
-Ctrl + Shift + F

12:30 6.함수명 쉽게 변경하기
-Ctrl + R + R(함수 오른쪽 클릭 후 이름바꾸기)

14:50 7.자동 정렬하기
-범위 지정 후 Ctrl + K + F 누르기

16:03 8.코드 자동 완성
-함수 입력 후 Tab 키 누르기

17:31 9.주석 설정 및 해제하기
-주석 처리 범위 지정 후 Ctrl + K + C(설정)
-주석 처리 범위 지정 후 Ctrl + K + U(해제)

18.39 10.모든 참조 찾기
-함수 클릭 후 도구 탭-옵션 선택, 키보드 클릭 후 모든참조찾기 입력
-바로가기키 설정( ex) Ctrl + Shift + G), 단축키 누르기

ctrl +shift + p, f1 : command Palette

quick open : ctrl + p

user settings : ctrl+,

toggle sidebar
ctrl+B

toggle Terminal
ctrl+`

keyboard Shortcuts
ctrl + k + s

kite : ai

beginning/end of file
ctrl + home / ctrl + end

select word
ctrl + shift + →

copy Line
ctrl+c x,v

move line down/up
alt+↑

copy line down / up
shift +alt +↑

insert line below
ctrl+Enter

multi selection
ctrl +D

undo last cursor
ctrl + u
